import requests
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup

# Replace these values with your own
TOKEN = 'TOKEN'  # —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ @botfather
CHANNEL_ID = '@sdfsdfsdfawde'  # –∫–∞–Ω–∞–ª –∫—É–¥–∞ –±—É–¥–µ—Ç –±–æ—Ç –ø–æ—Å—Ç–∏—Ç—å –∫—É—Ä—Å. –í—Ä–æ–¥–µ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –∏ id, –Ω–æ –ª—É—á—à–µ —É–∫–∞–∑—ã–≤–∞—Ç—å @
bot = Bot(token=TOKEN)
dp = Dispatcher()
stop_event = asyncio.Event()


async def send_message(message):
    last_price = 1
    text_after_start = message.text.split(" ")
    if len(text_after_start) >= 5:
        await message.answer("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
        print(text_after_start, text_after_start[2])
        network = "ton"  # —Å–µ—Ç—å –≤ –∫–æ—Ç–æ—Ä–æ–π —Ç–æ–∫–µ–Ω –Ω–∞—à –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø—Ä–∏–º–µ—Ä: ton, eth, sol
        network_ton = "eth"  # –Ω–µ —Ç—Ä–æ–≥–∞—Ç—å —ç—Ç–æ –¥–ª—è –∫—É—Ä—Å–∞ —Ç–æ–Ω–∞ –≤ –±–∞–∫—Å–∞—Ö
        adress_token = text_after_start[1]  # c —Å–∞–π—Ç–∞ https://www.geckoterminal.com/ru
        adres_ton = "0x582d872a1b094fc48f5de31d3b73f2d9be47def1"  # —ç—Ç–æ—Ç –∞–¥—Ä–µ—Å —Å —Ç–æ–≥–æ –∂–µ —Å–∞–π—Ç–∞, –Ω–æ —Ç—É—Ç —á–∏—Å—Ç–æ –∫–∞–∫ –ø—Ä–∞–π—Å –≤ –¥—Ä—É–≥–æ–π —Å–µ—Ç–∏
        url_token = f"https://api.geckoterminal.com/api/v2/networks/{network}/tokens/multi/{adress_token}"
        url_ton = f"https://api.geckoterminal.com/api/v2/networks/{network_ton}/tokens/multi/{adres_ton}"
        url_swap = text_after_start[3]  # —Å—Å—ã–ª–∫–∞ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        nuls_after_point = int(text_after_start[2])  # —Ç—É—Ç –∫–æ–ª–≤–æ –∑–Ω–∞–∫–æ–º –ø–æ—Å–ª–µ —Ç–æ—á–∫–∏ –¥–ª—è m5 —ç—Ç–æ 4, —Ç–∏–ø–∞: 1.0303
        #                                                                                                |    | <--- 4 –∑–Ω–∞–∫–∞
        text_in_button = " ".join(text_after_start[4:])
        while not stop_event.is_set():
            button = InlineKeyboardButton(
                text=text_in_button,
                url=url_swap
            )
            keyboard = InlineKeyboardMarkup(inline_keyboard=[[button]])

            response_m5 = requests.get(url_token)
            price_token = round(float(response_m5.json()["data"][0]['attributes']['price_usd']), nuls_after_point)
            await asyncio.sleep(15)
            response_ton = requests.get(url_ton)
            price_ton = round(float(response_ton.json()["data"][0]['attributes']['price_usd']), nuls_after_point)

            if price_token / last_price - 1 > 0:
                emoji = "üü¢"
            elif price_token / last_price - 1 == 0:  # —ç—Ç–æ —á–∏—Å—Ç–æ –æ—Ç –º–µ–Ω—è, –∞ —Ç–æ –≥–ª—É–ø–æ –≤—ã–≥–ª—è–¥–∏—Ç
                emoji = "‚ö™Ô∏è"
            else:
                emoji = "üî¥"

            text_in_post = f"${price_token} ({round(price_token / price_ton, 6)}üíé) {emoji} {round((price_token / last_price - 1) * 100, 2)}%"  # —Ç—É—Ç —Å–¥–µ–ª–∞–ª —Ñ–∏–∫—Å –∫–æ–ª–≤–æ –∫—É—Ä—Å–∞ –≤ —Ç–æ–Ω–µ –¥–æ 6 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π, –Ω–æ –æ–º–∂–Ω–æ –∏ —Å–∞–º–æ–º—É –≤—ã—Å—Ç–∞–≤–∏—Ç—å –Ω—É–∂–Ω–æ–µ
            await bot.send_message(chat_id=CHANNEL_ID, text=text_in_post, reply_markup=keyboard)
            last_price = price_token
            await asyncio.sleep(20)
    else:
        await message.answer(
            "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞, –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ —Ñ–æ—Ä–º—É–ª—É:\n\n <code>/start adress_token nuls_after_point link_in_button text_in_button</code>",
            parse_mode="HTML")


# –ü—Ä–∏–º–µ—Ä :)
# /start adress_token nuls_after_point link_in_button text_in_button
# /start EQBa6Oofc4vQZ1XZLTYRkbX4qWUWBCf0sFBgo0kdxdlw6rqN 4 https://swap.coffee/dex?ft=TON&st=M5 Buy M5
@dp.message(Command('start'))
async def start_handler(message: types.Message):
    await send_message(message)


@dp.message(Command('stop'))
async def stop_handler(message: types.Message):
    stop_event.set()
    await message.answer("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")


async def main():
    await dp.start_polling(bot)


if __name__ == '__main__':
    asyncio.run(main())
