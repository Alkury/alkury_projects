from aiogram import Bot, Dispatcher, types
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.types import LabeledPrice, Message, PreCheckoutQuery
from aiogram.filters import Command
from aiogram import F

bot = Bot(token="—Ç–æ–∫–µ–Ω")
dp = Dispatcher()

async def payment_keyboard(amount: int):
    builder = InlineKeyboardBuilder()
    builder.button(text=f"–û–ø–ª–∞—Ç–∏—Ç—å {amount} ‚≠êÔ∏è", pay=True)
    return builder.as_markup()

async def send_invoice_handler(message: Message):
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–≤—ë–∑–¥ –¥–ª—è –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è:")

async def get_amount_handler(message: Message):
    try:
        amount = int(message.text)
        prices = [LabeledPrice(label="XTR", amount=amount)]
        await message.answer_invoice(
            title="–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–∞–Ω–∞–ª–∞",
            description=f"–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å –∫–∞–Ω–∞–ª –Ω–∞ {amount} –∑–≤—ë–∑–¥!",
            prices=prices,
            provider_token="",
            payload="channel_support",
            currency="XTR",
            reply_markup=await payment_keyboard(amount),
        )
    except ValueError:
        await message.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.")

async def pre_checkout_handler(pre_checkout_query: PreCheckoutQuery):
    await pre_checkout_query.answer(ok=True)

async def success_payment_handler(message: Message):
    total_amount = message.successful_payment.total_amount
    print(total_amount)
    await message.answer(text="ü•≥–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É!ü§ó")

async def pay_support_handler(message: Message):
    last_message = message.reply_to_message
    if last_message:
        print(last_message.text)
    await message.answer(
        text="–î–æ–±—Ä–æ–≤–æ–ª—å–Ω—ã–µ –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è –Ω–µ –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—é—Ç –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤, "
        "–æ–¥–Ω–∞–∫–æ, –µ—Å–ª–∏ –≤—ã –æ—á–µ–Ω—å —Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ - —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏."
    )

dp.message.register(send_invoice_handler, Command(commands="start"))
dp.message.register(get_amount_handler, F.text)
dp.pre_checkout_query.register(pre_checkout_handler)
dp.message.register(success_payment_handler, F.successful_payment)

dp.message.register(pay_support_handler, Command(commands="paysupport"))  # Add state="*" to handle the command separately

if __name__ == "__main__":
    import asyncio
    asyncio.run(dp.start_polling(bot))